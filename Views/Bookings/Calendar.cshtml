@{
    ViewData["Title"] = "Calendar View";
}

<h2><i class="bi bi-calendar"></i> Resource Booking Calendar</h2>

<div class="row mb-3">
    <div class="col-md-6">
        <a asp-action="Create" class="btn btn-primary btn-sm">
            <i class="bi bi-plus-circle"></i> Create New Booking
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
            <i class="bi bi-list"></i> List View
        </a>
    </div>
    <div class="col-md-6">
        <div class="d-flex justify-content-end align-items-center">
            <label for="resourceFilter" class="form-label me-2 mb-0 small">Filter:</label>
            <select id="resourceFilter" class="form-select form-select-sm w-auto">
                <option value="">All Resources</option>
                @foreach (var resource in (List<ResourceBooking.Models.Resource>)ViewBag.Resources)
                {
                    <option value="@resource.Id">@resource.Name</option>
                }
            </select>
        </div>
    </div>
</div>

<div class="alert alert-info" id="loadingMessage">
    <i class="bi bi-hourglass-split"></i> Loading calendar...
</div>

<div id="calendar" class="border rounded" style="display: none;"></div>

<div class="alert alert-danger" id="errorMessage" style="display: none;">
    <h6><i class="bi bi-exclamation-triangle"></i> Calendar Loading Error</h6>
    <p>Unable to load the calendar. This might be because:</p>
    <ul>
        <li>FullCalendar library is not loaded</li>
        <li>Internet connection issues</li>
        <li>Server connectivity problems</li>
    </ul>
    <p>Please try refreshing the page or contact support.</p>
    <button onclick="window.location.reload()" class="btn btn-primary btn-sm">
        <i class="bi bi-arrow-clockwise"></i> Refresh Page
    </button>
</div>

@section Scripts {
    <!-- FullCalendar CSS and JS from CDN -->
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css' rel='stylesheet' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if FullCalendar is loaded
            if (typeof FullCalendar === 'undefined') {
                console.error('FullCalendar library not loaded');
                document.getElementById('loadingMessage').style.display = 'none';
                document.getElementById('errorMessage').style.display = 'block';
                return;
            }

            var calendarEl = document.getElementById('calendar');
            var resourceFilter = document.getElementById('resourceFilter');
            var loadingMessage = document.getElementById('loadingMessage');
            var errorMessage = document.getElementById('errorMessage');
            
            try {
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: window.innerWidth < 768 ? 'listWeek' : 'dayGridMonth',
                    height: 'auto',
                    aspectRatio: window.innerWidth < 768 ? 1.0 : 1.6,
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: window.innerWidth < 768 ? 'listWeek,dayGridMonth' : 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                    },
                    views: {
                        dayGridMonth: {
                            titleFormat: { year: 'numeric', month: 'short' }
                        },
                        timeGridWeek: {
                            titleFormat: { month: 'short', day: 'numeric' }
                        },
                        timeGridDay: {
                            titleFormat: { weekday: 'long', month: 'short', day: 'numeric' }
                        },
                        listWeek: {
                            titleFormat: { month: 'short', day: 'numeric' }
                        }
                    },
                    eventTimeFormat: {
                        hour: 'numeric',
                        minute: '2-digit',
                        meridiem: 'short'
                    },
                    slotMinTime: '06:00:00',
                    slotMaxTime: '22:00:00',
                    allDaySlot: false,
                    nowIndicator: true,
                    weekNumbers: false,
                    dayMaxEvents: 3,
                    moreLinkClick: 'popover',
                    loading: function(isLoading) {
                        if (isLoading) {
                            loadingMessage.style.display = 'block';
                            calendarEl.style.display = 'none';
                        } else {
                            loadingMessage.style.display = 'none';
                            calendarEl.style.display = 'block';
                        }
                    },
                    events: function(fetchInfo, successCallback, failureCallback) {
                        var resourceId = resourceFilter.value;
                        var url = '@Url.Action("GetCalendarEvents", "Bookings")';
                        
                        fetch(url + '?resourceId=' + encodeURIComponent(resourceId) + 
                              '&start=' + encodeURIComponent(fetchInfo.startStr) + 
                              '&end=' + encodeURIComponent(fetchInfo.endStr))
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok: ' + response.status);
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log('Calendar events loaded:', data.length, 'events');
                                successCallback(data);
                            })
                            .catch(error => {
                                console.error('Error fetching events:', error);
                                errorMessage.innerHTML = '<h6><i class="bi bi-exclamation-triangle"></i> Error Loading Events</h6><p>Failed to load calendar events: ' + error.message + '</p>';
                                errorMessage.style.display = 'block';
                                failureCallback(error);
                            });
                    },
                    eventClick: function(info) {
                        var event = info.event;
                        var props = event.extendedProps;
                        
                        var startTime = new Date(event.start).toLocaleString();
                        var endTime = event.end ? new Date(event.end).toLocaleString() : 'No end time';
                        
                        var content = `
                            <div class="p-3">
                                <h6 class="mb-2">${props.resourceName || 'Unknown Resource'}</h6>
                                <p class="mb-1"><strong>Purpose:</strong> ${props.purpose || 'No purpose specified'}</p>
                                <p class="mb-1"><strong>Booked By:</strong> ${props.bookedBy || 'Unknown User'}</p>
                                <p class="mb-2"><strong>Time:</strong> ${startTime} - ${endTime}</p>
                                ${props.canEdit ? `<a href="/Bookings/Edit/${event.id}" class="btn btn-sm btn-primary">Edit Booking</a>` : ''}
                                <button onclick="closeModal()" class="btn btn-sm btn-secondary ms-1">Close</button>
                            </div>
                        `;
                        
                        showModal('Booking Details', content);
                    },
                    eventDidMount: function(info) {
                        // Add tooltip
                        var resourceName = info.event.extendedProps.resourceName || 'Unknown Resource';
                        var purpose = info.event.extendedProps.purpose || 'No purpose';
                        info.el.title = `${resourceName} - ${purpose}`;
                    },
                    windowResize: function(view) {
                        if (window.innerWidth < 768 && calendar.view.type !== 'listWeek') {
                            calendar.changeView('listWeek');
                        } else if (window.innerWidth >= 768 && calendar.view.type === 'listWeek') {
                            calendar.changeView('dayGridMonth');
                        }
                    },
                    eventContent: function(arg) {
                        // Custom event rendering for better mobile display
                        if (window.innerWidth < 768) {
                            return {
                                html: `<div class="fc-event-main-frame">
                                         <div class="fc-event-title-container">
                                           <div class="fc-event-title fc-sticky">${arg.event.title}</div>
                                         </div>
                                       </div>`
                            };
                        }
                        return true; // Use default rendering for desktop
                    }
                });
                
                calendar.render();
                
                // Hide loading message and show calendar
                loadingMessage.style.display = 'none';
                calendarEl.style.display = 'block';
                
                // Refresh calendar when filter changes
                resourceFilter.addEventListener('change', function() {
                    console.log('Resource filter changed to:', this.value);
                    calendar.refetchEvents();
                });
                
                console.log('Calendar initialized successfully');
                
            } catch (error) {
                console.error('Error initializing calendar:', error);
                loadingMessage.style.display = 'none';
                errorMessage.innerHTML = '<h6><i class="bi bi-exclamation-triangle"></i> Calendar Initialization Error</h6><p>Failed to initialize calendar: ' + error.message + '</p>';
                errorMessage.style.display = 'block';
            }
        });

        // Modal functions
        function showModal(title, content) {
            // Remove existing modal
            var existingModal = document.getElementById('eventModal');
            if (existingModal) {
                existingModal.remove();
            }

            // Create modal
            var modal = document.createElement('div');
            modal.id = 'eventModal';
            modal.className = 'modal fade show';
            modal.style.display = 'block';
            modal.style.backgroundColor = 'rgba(0,0,0,0.5)';
            modal.style.zIndex = '9999';
            modal.innerHTML = `
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">${title}</h5>
                            <button type="button" class="btn-close" onclick="closeModal()"></button>
                        </div>
                        <div class="modal-body p-0">
                            ${content}
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
        }

        function closeModal() {
            var modal = document.getElementById('eventModal');
            if (modal) {
                modal.remove();
            }
        }

        // Close modal when clicking outside
        document.addEventListener('click', function(e) {
            var modal = document.getElementById('eventModal');
            if (modal && e.target === modal) {
                closeModal();
            }
        });

        // Handle escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });
    </script>
}