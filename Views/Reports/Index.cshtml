@model ResourceBooking.Controllers.ReportsViewModel
@{
    ViewData["Title"] = "Reports & Analytics";
}

<div class="d-flex flex-wrap align-items-center justify-content-between mb-4 gap-3">
    <div class="d-flex align-items-center">
        <i class="bi bi-bar-chart-line me-3 text-primary" style="font-size: 2rem;"></i>
        <div>
            <h1 class="mb-1">Reports & Analytics</h1>
            <p class="text-muted mb-0">@Model.RangeLabel • Generated @DateTime.Now.ToString("MMM dd, yyyy HH:mm")</p>
            <small class="text-muted">Range Total: <strong>@Model.CurrentRangeTotal</strong> bookings (@Model.RangeDeltaPercent% vs previous)</small>
        </div>
    </div>

    <form method="get" asp-action="Index" class="d-flex flex-wrap align-items-end gap-2" id="rangeForm">
        <input type="hidden" name="range" id="rangeInput" value="@Model.SelectedQuickRange" />
        <div class="btn-group" role="group" aria-label="Quick ranges">
            <button type="button" class="btn btn-outline-primary @(Model.SelectedQuickRange=="this-month"?"active":"")" onclick="selectRange('this-month')">This Month</button>
            <button type="button" class="btn btn-outline-primary @(Model.SelectedQuickRange=="last-month"?"active":"")" onclick="selectRange('last-month')">Last Month</button>
            <button type="button" class="btn btn-outline-primary @(Model.SelectedQuickRange=="last-90"?"active":"")" onclick="selectRange('last-90')">Last 90 Days</button>
            <button type="button" class="btn btn-outline-secondary @(Model.SelectedQuickRange=="custom"?"active":"")" onclick="selectRange('custom')">Custom</button>
        </div>
        <div class="custom-range-fields @(Model.SelectedQuickRange=="custom"?"d-flex":"d-none") align-items-end gap-2">
            <div>
                <label class="form-label small mb-1">Start</label>
                <input type="date" name="start" class="form-control form-control-sm" value="@Model.RangeStart:yyyy-MM-dd" />
            </div>
            <div>
                <label class="form-label small mb-1">End</label>
                <input type="date" name="end" class="form-control form-control-sm" value="@Model.RangeEnd:yyyy-MM-dd" />
            </div>
            <div class="pb-1">
                <button type="submit" class="btn btn-sm btn-primary">Apply</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script>
        function selectRange(key) {
            document.getElementById('rangeInput').value = key;
            const customFields = document.querySelector('.custom-range-fields');
            if (key === 'custom') { customFields.classList.replace('d-none','d-flex'); }
            else { customFields.classList.replace('d-flex','d-none'); document.getElementById('rangeForm').submit(); }
        }
        // Sparkline
        const points = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TrendPoints));
        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TrendLabels));
        if(points.length){
            const ctx = document.getElementById('trendSpark');
            new Chart(ctx,{type:'line',data:{labels:labels,datasets:[{data:points,fill:false,borderColor:'#0d6efd',tension:.3,pointRadius:0,borderWidth:2}]},options:{plugins:{legend:{display:false},tooltip:{callbacks:{label:(c)=>`Bookings: ${c.parsed.y}`}}},scales:{x:{display:false},y:{display:false}},elements:{line:{borderCapStyle:'round'}},responsive:true,maintainAspectRatio:false}});
        }
        // Bootstrap tooltips (requires bootstrap bundle already on layout)
        document.addEventListener('DOMContentLoaded', () => {
            const triggers = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            triggers.forEach(el => new bootstrap.Tooltip(el));
        });
    </script>
}

<!-- Overview Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card border-0 shadow-sm text-white" style="background: linear-gradient(135deg,#0d6efd,#0751bd);">
            <div class="card-body text-center">
                <i class="bi bi-building display-6 mb-2 opacity-75"></i>
                <h3 class="card-title mb-0">@Model.DashboardStats.TotalResources</h3>
                <small class="text-light">Resources</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm text-white" style="background: linear-gradient(135deg,#198754,#0f5c39);">
            <div class="card-body text-center">
                <i class="bi bi-calendar-check display-6 mb-2 opacity-75"></i>
                <h3 class="card-title mb-0">@Model.ThisMonthBookings</h3>
                <small class="text-light">This Month's Bookings</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm text-white" style="background: linear-gradient(135deg,#0dcaf0,#07839d);">
            <div class="card-body text-center">
                <i class="bi bi-speedometer2 display-6 mb-2 opacity-75"></i>
                <h3 class="card-title mb-0">@Model.DashboardStats.AverageUtilizationPercentage%</h3>
                <small class="text-light">Utilization</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm text-white" style="background: linear-gradient(135deg,#ffc107,#c28a00); color:#212529;">
            <div class="card-body text-center">
                <i class="bi bi-people display-6 mb-2 opacity-75"></i>
                <h3 class="card-title mb-0">@Model.DashboardStats.ActiveUsers</h3>
                <small class="text-dark fw-semibold">Active Users</small>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-6">
        <div class="card shadow-sm h-100">
            <div class="card-header bg-white fw-semibold"><i class="bi bi-star-fill text-warning me-2"></i>Popular Resources (@Model.RangeLabel)</div>
            <div class="card-body">
                @if (Model.PopularResources.Any())
                {
                    @foreach (var resource in Model.PopularResources.Take(10))
                    {
                        var prev = Model.PreviousResourceBookings.ContainsKey(resource.ResourceName)? Model.PreviousResourceBookings[resource.ResourceName]:0;
                        var delta = prev == 0 ? (resource.BookingCount>0?100:0) : Math.Round(((double)(resource.BookingCount - prev) / prev) * 100,1);
                        var deltaClass = delta>0?"text-success":(delta<0?"text-danger":"text-muted");
                        var deltaSign = delta>=0?"+":"";
                        var tooltip = $"Current: {resource.BookingCount} bookings | Previous: {prev} | Change: {deltaSign}{delta}%";
                        <div class="d-flex justify-content-between align-items-center mb-2 pb-2 border-bottom small">
                            <div class="flex-grow-1">
                                <strong>@resource.ResourceName</strong><br />
                                <span class="text-muted">@resource.BookingCount bookings • @resource.TotalHours hrs</span>
                            </div>
                            <div class="text-end me-3" style="min-width:70px;">
                                <span class="@deltaClass" data-bs-toggle="tooltip" data-bs-title="@tooltip">@deltaSign@delta%</span>
                            </div>
                            <div class="text-end" style="min-width:80px;">
                                @{ var stars = Math.Min(5, Math.Max(0, (int)Math.Round(resource.PopularityStars))); }
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= stars) { <i class="bi bi-star-fill text-warning"></i>; }
                                    else { <i class="bi bi-star text-muted"></i>; }
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted mb-0">No booking data in selected range.</p>
                }
            </div>
        </div>
    </div>
    <div class="col-md-6 d-flex flex-column">
        <div class="card shadow-sm mb-4 flex-grow-1" style="min-height:170px;">
            <div class="card-header bg-white fw-semibold d-flex justify-content-between align-items-center">
                <span><i class="bi bi-activity text-primary me-2"></i>Trend (Daily Bookings)</span>
                <small class="text-muted">Last @Model.TrendPoints.Count days</small>
            </div>
            <div class="card-body p-2"><div style="height:120px"><canvas id="trendSpark"></canvas></div></div>
        </div>
        <div class="card shadow-sm h-100">
            <div class="card-header bg-white fw-semibold"><i class="bi bi-person-badge text-primary me-2"></i>Top Users (@Model.RangeLabel)</div>
            <div class="card-body">
                @if (Model.UserActivity.Any())
                {
                    @foreach (var user in Model.UserActivity.Take(8))
                    {
                        <div class="d-flex justify-content-between align-items-center mb-2 pb-2 border-bottom small">
                            <div><strong>@user.UserName</strong><br /><span class="text-muted">@user.BookingCount bookings</span></div>
                            <span class="badge bg-primary">@user.TotalHours hrs</span>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted mb-0">No user activity in selected range.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-4 ms-auto">
        <div class="card bg-light shadow-sm">
            <div class="card-body text-center">
                <h6 class="fw-semibold">System Health</h6>
                <div class="progress mb-2" style="height: 10px;">
                    <div class="progress-bar" role="progressbar" style="width: @Model.DashboardStats.AverageUtilizationPercentage%; background: linear-gradient(90deg,#28a745,#0d7a2b);"></div>
                </div>
                <small class="text-muted">@Model.DashboardStats.AverageUtilizationPercentage% Utilization</small>
                <div class="mt-3">
                    <span class="badge bg-success">Optimal</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-12">
        <div class="card bg-white border-0 shadow-sm">
            <div class="card-body py-2">
                <div class="row text-center small text-muted">
                    <div class="col-md-3 mb-2 mb-md-0">
                        <i class="bi bi-info-circle"></i> Range Start<br /><span class="fw-semibold text-dark">@Model.RangeStart:dd MMM yyyy</span>
                    </div>
                    <div class="col-md-3 mb-2 mb-md-0">
                        <i class="bi bi-flag"></i> Range End<br /><span class="fw-semibold text-dark">@Model.RangeEnd:dd MMM yyyy</span>
                    </div>
                    <div class="col-md-3 mb-2 mb-md-0">
                        <i class="bi bi-graph-up"></i> Growth<br /><span class="fw-semibold text-dark">@Model.MonthlyGrowthPercentage% vs last month</span>
                    </div>
                    <div class="col-md-3">
                        <i class="bi bi-clock-history"></i> Generated<br /><span class="fw-semibold text-dark">@DateTime.Now:HH:mm</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3 d-flex gap-2">
    <a asp-controller="Dashboard" asp-action="Index" class="btn btn-secondary btn-sm"><i class="bi bi-arrow-left"></i> Back</a>
    <button onclick="window.print()" class="btn btn-outline-primary btn-sm"><i class="bi bi-printer"></i> Print</button>
</div>